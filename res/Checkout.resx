<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AlimentosPersonalizados" xml:space="preserve">
    <value>Alimentos Personalizados</value>
  </data>
  <data name="AlterarAssinaturaTitle" xml:space="preserve">
    <value>Selecione o periodicidade do pagamento e altere seu plano!</value>
  </data>
  <data name="AlterarPlano" xml:space="preserve">
    <value>Alterar Plano</value>
  </data>
  <data name="Ano" xml:space="preserve">
    <value>ano</value>
  </data>
  <data name="Anual" xml:space="preserve">
    <value>ANUAL</value>
  </data>
  <data name="AoAssinarConcorda" xml:space="preserve">
    <value>Ao assinar o Dietbox você concorda com nossos</value>
  </data>
  <data name="Apenas" xml:space="preserve">
    <value>apenas</value>
  </data>
  <data name="AppProfissional" xml:space="preserve">
    <value>Aplicativo para o profissional</value>
  </data>
  <data name="Assinar" xml:space="preserve">
    <value>Assinar</value>
  </data>
  <data name="AssinarMaisTarde" xml:space="preserve">
    <value>Para assinar mais tarde e voltar para o sistema, clique</value>
  </data>
  <data name="AssinaturaCriadaAlert" xml:space="preserve">
    <value>Por favor, leia atentamente o texto abaixo conforme o método de pagamento escolhido:</value>
  </data>
  <data name="AssinaturaCriadaComSucesso" xml:space="preserve">
    <value>Sua assinatura foi criada com sucesso</value>
  </data>
  <data name="AtualizeSeusDados" xml:space="preserve">
    <value>Atualize seus dados</value>
  </data>
  <data name="Basico" xml:space="preserve">
    <value>Básico</value>
  </data>
  <data name="BoletoBancario" xml:space="preserve">
    <value>Boleto Bancário</value>
  </data>
  <data name="BoletoContent" xml:space="preserve">
    <value>Ao assinar o Dietbox escolhendo a opção Boleto Bancário, o sistema enviará um e-mail para você com as instruções de pagamento.</value>
  </data>
  <data name="CartaoDeCredito" xml:space="preserve">
    <value>Cartão de Crédito</value>
  </data>
  <data name="CartaoDeCreditoOuPayPal" xml:space="preserve">
    <value>Cartão de Crédito ou PayPal</value>
  </data>
  <data name="CartaoDeCreditoOuPayPalContent" xml:space="preserve">
    <value>Uma fatura foi criada no seu cartão de crédito. Estamos tentando processá-la, se tudo ocorrer bem você já pode utilizar o Dietbox com os benefícios de ser assinante. Caso contrário, informaremos se houve algum problema.</value>
  </data>
  <data name="CartaoInvalido" xml:space="preserve">
    <value>Cartão inválido.</value>
  </data>
  <data name="CodigoDeSeguranca" xml:space="preserve">
    <value>Código de segurança</value>
  </data>
  <data name="ComparePlanoAdequado" xml:space="preserve">
    <value>Compare e escolha o plano mais adequado para você</value>
  </data>
  <data name="ConfirmeDadosPagamento" xml:space="preserve">
    <value>Confirme seus dados de pagamento</value>
  </data>
  <data name="ConformeEscritoNoCartao" xml:space="preserve">
    <value>Conforme escrito no cartão</value>
  </data>
  <data name="Currency" xml:space="preserve">
    <value>R$</value>
  </data>
  <data name="Equivalente" xml:space="preserve">
    <value>Equivalente a</value>
  </data>
  <data name="EscolhaFormaDePagamento" xml:space="preserve">
    <value>Escolha a forma de pagamento</value>
  </data>
  <data name="EscolhaSeuPlano" xml:space="preserve">
    <value>Escolha seu plano</value>
  </data>
  <data name="Escolher" xml:space="preserve">
    <value>Escolher</value>
  </data>
  <data name="ExportarPDF" xml:space="preserve">
    <value>Exportar PDF</value>
  </data>
  <data name="Ganhe3Meses" xml:space="preserve">
    <value>Ganhe até 3 meses de graça!</value>
  </data>
  <data name="Gratuito" xml:space="preserve">
    <value>Gratuito</value>
  </data>
  <data name="Ilimitado" xml:space="preserve">
    <value>Ilimitado</value>
  </data>
  <data name="MaisPopular" xml:space="preserve">
    <value>Mais popular</value>
  </data>
  <data name="MensagensNoChat" xml:space="preserve">
    <value>Mensagens no chat</value>
  </data>
  <data name="Mensal" xml:space="preserve">
    <value>MENSAL</value>
  </data>
  <data name="Mes" xml:space="preserve">
    <value>mês</value>
  </data>
  <data name="NomeDoTitular" xml:space="preserve">
    <value>Nome do titular</value>
  </data>
  <data name="NovaAssinaturaTitle" xml:space="preserve">
    <value>Selecione a forma de pagamento e complete sua assinatura!</value>
  </data>
  <data name="NumeroDoCartao" xml:space="preserve">
    <value>Número do cartão</value>
  </data>
  <data name="Obrigado" xml:space="preserve">
    <value>Obrigado!</value>
  </data>
  <data name="OkEntendi" xml:space="preserve">
    <value>OK, Entendi</value>
  </data>
  <data name="PagamentosBoletoBancario" xml:space="preserve">
    <value>Pagamentos em boleto Bancário</value>
  </data>
  <data name="PagamentosBoletoBancarioContent" xml:space="preserve">
    <value>Por favor, verifique seu e-mail, pois enviamos as instruções para efetuar o pagamento. Não esqueça de verificar se está na caixa de SPAM.</value>
  </data>
  <data name="PaypalContent" xml:space="preserve">
    <value>Para seu maior conforto o Dietbox possui parceria com o Paypal! Escolhendo esta forma de pagamento seus dados financeiros ficam protegidos, uma vez que o Paypal não fornece seus dados de cartão de crédito e conta bancária.</value>
  </data>
  <data name="PersonalizarLogomarca" xml:space="preserve">
    <value>Personalizar logomarca</value>
  </data>
  <data name="PorDia" xml:space="preserve">
    <value>por dia</value>
  </data>
  <data name="PorMes" xml:space="preserve">
    <value>por mês</value>
  </data>
  <data name="Profissional" xml:space="preserve">
    <value>Profissional</value>
  </data>
  <data name="SaibaComo" xml:space="preserve">
    <value>Saiba como</value>
  </data>
  <data name="Semestral" xml:space="preserve">
    <value>SEMESTRAL</value>
  </data>
  <data name="Semestre" xml:space="preserve">
    <value>semestre</value>
  </data>
  <data name="SuperDescontosPlanoIlimitado" xml:space="preserve">
    <value>Super Descontos do Plano Ilimitado</value>
  </data>
  <data name="SuperDescontosPlanoProfissional" xml:space="preserve">
    <value>Super Descontos do Plano Profissional</value>
  </data>
  <data name="TermosDeUso" xml:space="preserve">
    <value>termos de uso</value>
  </data>
  <data name="TresMesesDeGraca" xml:space="preserve">
    <value>&lt;b&gt;3 meses&lt;/b&gt; de graça!</value>
  </data>
  <data name="UmMesDeGraca" xml:space="preserve">
    <value>&lt;b&gt;1 mês&lt;/b&gt; de graça!</value>
  </data>
  <data name="Validade" xml:space="preserve">
    <value>Validade</value>
  </data>
</root>